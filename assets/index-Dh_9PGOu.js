(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const i=new IntersectionObserver((t,o)=>{t.forEach(s=>{s.isIntersecting&&s.target.classList.add("show")})}),d=new IntersectionObserver((t,o)=>{t.forEach(s=>{s.isIntersecting&&s.target.classList.add("show-object")})}),l=document.querySelectorAll(".hidden");l.forEach((t,o)=>{i.observe(t)});const f=document.querySelectorAll(".hidden-object");f.forEach((t,o)=>{d.observe(t)});
