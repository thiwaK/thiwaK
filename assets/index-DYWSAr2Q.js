(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();const i=new IntersectionObserver((r,o)=>{r.forEach(s=>{s.isIntersecting&&s.target.classList.add("show")})}),d=new IntersectionObserver((r,o)=>{r.forEach(s=>{s.isIntersecting&&s.target.classList.add("show-object")})}),l=document.querySelectorAll(".hidden");l.forEach((r,o)=>{i.observe(r)});const a=document.querySelectorAll(".hidden-object");a.forEach((r,o)=>{d.observe(r)});document.getElementById("avatar");document.getElementById("avatarBackground");function u(){}window.addEventListener("resize",u);
