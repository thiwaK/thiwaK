(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();const n=new IntersectionObserver((o,s)=>{o.forEach(t=>{t.isIntersecting?t.target.classList.add("show"):t.target.classList.remove("show")})}),d=new IntersectionObserver((o,s)=>{o.forEach(t=>{t.isIntersecting?t.target.classList.add("show-object"):t.target.classList.remove("show-object")})}),l=document.querySelectorAll(".hidden");l.forEach((o,s)=>{n.observe(o)});const f=document.querySelectorAll(".hidden-object");f.forEach((o,s)=>{d.observe(o)});
